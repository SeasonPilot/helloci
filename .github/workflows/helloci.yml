name: Go Test

on: [ push, pull_request ]

jobs:

  helloci-build:
    name: Test with go ${{ matrix.go_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment:
      name: helloci

    strategy:
      matrix:
        go_version: [ 1.16 ]
        os: [ ubuntu-latest ]

    steps:

      - name: Set up Go ${{ matrix.go_version }}     # 准备一个Go编译环境。
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory    # 从marmotedu/helloci下载源码。
        uses: actions/checkout@v2

      - name: Tidy                 # 添加或删除缺失的依赖包。
        run: |
          go mod tidy

      - name: Build # 编译Go源码。
        run: |
          go build -v -o helloci .

      - name: Collect main.go file   # 上传构建产物
        uses: actions/upload-artifact@v1.0.0
        with:
          name: main-output
          path: main.go

      - name: Publish to Registry    # 构建镜像，并将镜像push到 ccr.ccs.tencentyun.com/marmotedu/helloci:beta
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ccr.ccs.tencentyun.com/marmotedu/helloci:beta  # docker image 的名字
          username: ${{ secrets.DOCKER_USERNAME}} # 用户名
          password: ${{ secrets.DOCKER_PASSWORD }} # 密码
          registry: ccr.ccs.tencentyun.com # 腾讯云Registry
          dockerfile: Dockerfile # 指定 Dockerfile 的位置
          tag_names: true # 是否将 release 的 tag 作为 docker image 的 tag
